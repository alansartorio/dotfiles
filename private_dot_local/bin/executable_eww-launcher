#!/usr/bin/env bash

# Hyprland assigns monitor_ids consistently,
# while eww screen ids change over time if monitors are unplugged/plugged
# we can use --screen argument with monitor model to prevent this
get-monitor-model() {
    hyprland_id=$1
    hyprctl monitors -j | jq -r ".[] | select(.id == $hyprland_id) | .model"
}

get-monitors() {
    hyprctl monitors -j | jq -r '.[] | .id'
}

open-bar() {
    monitor_id=$1
    monitor_model=$(get-monitor-model $monitor_id)
    if [ $monitor_id = 0 ]; then
        bar=main-bar
    else
        bar=secondary-bar
    fi

    eww open --screen "$monitor_model" -c ~/.config/eww/bar --id $monitor_id $bar --arg "monitor_id=$monitor_id" --arg "monitor_index=$monitor_id"
}
close-bar() {
    monitor_id=$1
    eww close -c ~/.config/eww/bar $monitor_id
}

reload-bars() {
    eww close-all -c ~/.config/eww/bar
    get-monitors | while read monitor_id; do
        open-bar $monitor_id
    done
}

handle() {
  case $1 in
    monitoraddedv2*|monitorremovedv2*)
        reload-bars
        ;;
  esac
}

get-monitor-model-niri() {
    niri_name=$1
    niri msg -j outputs | jq -r ".[] | select(.name == \"$niri_name\") | .model"
}

open-bar-niri() {
    monitor_id=$1
    monitor_model=$(get-monitor-model-niri $monitor_id)
    if [ $monitor_id = "DP-2" ]; then
        bar=main-bar-niri
    else
        bar=secondary-bar-niri
    fi

    eww open --screen "$monitor_model" -c ~/.config/eww/bar --id $monitor_id $bar --arg "monitor_id=$monitor_id" --arg "monitor_index=$monitor_id"
}
reload-bars-niri() {
  monitors=$1
  echo "closing all"
  eww close-all -c ~/.config/eww/bar
  echo "$monitors" | while read output; do
      echo opening $output
      open-bar-niri $output
  done
}
handle-niri() {
  workspaces=$(jq -c '.WorkspacesChanged.workspaces'<<<$1)
  if ! [ "$workspaces" = "null" ]; then
    active_monitors=$(jq -r '[.[] | .output] | unique | sort_by(.) | .[]' <<<$workspaces)
    if [ "$previous_monitors" != "$active_monitors" ]; then
      reload-bars-niri "$active_monitors"
    else
      echo "not reloading, same monitors"
    fi
  fi
  previous_monitors=$active_monitors
}

if pidof niri; then
  niri msg -j event-stream | while read -r line; do handle-niri "$line"; done
elif pidof Hyprland; then
  reload-bars
  socat -U - UNIX-CONNECT:$XDG_RUNTIME_DIR/hypr/$HYPRLAND_INSTANCE_SIGNATURE/.socket2.sock | while read -r line; do handle "$line"; done
else
  echo "unsupported desktop environment"
fi
